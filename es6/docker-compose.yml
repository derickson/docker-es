version: '2'
services:
  es_standalone:
    container_name: elasticsearch1
    image: docker.elastic.co/elasticsearch/elasticsearch-platinum:6.2.4
    environment:
      - cluster.name=docker-cluster
      - node.name=elasticsearch1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "node.master=true"
      - "node.data=true"
      - xpack.monitoring.enabled=false
      - xpack.security.enabled=true
      - xpack.ssl.key=/usr/share/elasticsearch/config/x-pack/certificates/elasticsearch1/elasticsearch1.key
      - xpack.ssl.certificate=/usr/share/elasticsearch/config/x-pack/certificates/elasticsearch1/elasticsearch1.crt 
      - xpack.ssl.certificate_authorities=/usr/share/elasticsearch/config/x-pack/certificates/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.http.ssl.enabled=true
    networks:
      app-tls:
      internal-tls:
        ipv4_address: 172.18.10.2
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 1g
    volumes:
      - ./data/es_s1:/usr/share/elasticsearch/data
      - ./certificates:/usr/share/elasticsearch/config/x-pack/certificates
    ports:
      - 9200:9200


## Notes.  
##     Base image assumes security and monitoring are on
##     each alternate docker has pre-built optimized modules in kibana for various parts being disabled
##     this is important as otherwise each kibana boot will take many minutes
  kibana1:
    image: docker.elastic.co/kibana/kibana:6.2.4
    # build: kibanacustom_no_monitor
    # build: kibanacustom_no_sec_no_monitor
    container_name: kibana1
    volumes:
      - ./certificates:/usr/share/kibana/config/certificates
      ## Note: if you are messing with kibana settings enough cause re-optimizations
      ## it might make sense to mount a volume that surivives to container while experimenting
      ## when done, cook into a custom Dockerfile like above
      # - ./kibanaoptimize:/usr/share/kibana/optimize
    ports:
      - 5601:5601
    networks:
      app-tls:
    links:
      - "es_standalone:elasticsearch1"
    environment:
      - SERVER_PORT=5601
      - SERVER_HOST="0"
      - SERVER_NAME="dockermachine"
      - ELASTICSEARCH_URL=https://elasticsearch1:9200      
      - XPACK_MONITORING_ENABLED=true
      - XPACK_SECURITY_ENABLED=true
      - XPACK_SECURITY_ENCRYPTIONKEY=something_at_least_32_characters_yo
      - ELASTICSEARCH_USERNAME=kibana
      - ELASTICSEARCH_PASSWORD=${KIBANA_PWD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certificates/ca/ca.pem
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=full
      - SERVER_SSL_KEY=/usr/share/kibana/config/certificates/kibana1/kibana1.key
      - SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certificates/kibana1/kibana1.crt
      - SERVER_SSL_ENABLED=true
networks:
  app-tls:
    driver: bridge
  internal-tls:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.18.10.0/24
        gateway: 172.18.10.1


